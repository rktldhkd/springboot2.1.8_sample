#properties파일을 이용하여 설정적용법 : DatabaseConfiguration.java 파일안의 @PropertySource("classpath:/application.properties") 가 주석처리된걸 풀어서 사용하자

#########
# 설정파일 분리 전
# 개발, 운영환경에 공통으로 사용 할 설정들
# 마이바티스 카멜표기설정, jpa db관련 설정은 환경이 바뀌어도 동일하게 동작.
#########
#app이 실행될때 application.properties와 같이 적용할 설정 파일.
#application- 뒤의 이름을 적용.
#application-production.properties 라면 production 이라고 지정
spring.profiles.active=production

spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.allow-pool-suspension=true

mybatis.configuration.map-underscore-to-camel-case=true

#===========
#JPA 설정.
#MySQL5InnoDBdialect : mysql에서 성능좋은 엔진. default값은 다른 것이므로 이것으로 명시설정 해줘야한다.
#===========
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.show-sql=true

#########
# 설정파일 분리 전
#########
##app이 실행될때 적용할 설정 파일.
##application- 뒤의 이름을 적용.
##application-production.properties 라면 production 이라고 지정
#spring.profiles.active=dev
#
##spring.jpa.hibernate.hbm2ddl.auto=validate
##spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##log4jdbc 적용
#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#
##hikari(커넥션 풀 라이브러리) 사용시, url속성이 아닌, jdbc-url 속성을 사용해야 한다.
##spring boot 2 부터 hikari가 default이므로, jdbc-url을 사용하자.
##Access denied ... "@'localhost'.... 에러발생하여 user=admin&password=admin 추가.
##jdbc:db종류://IP:DB포트번호/테이블위치한DB이름
##spring.datasource.hikari.jdbc-url=jdbc:mysql://localhost:3306/study_springboot?user=admin&password=admin&serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8
##log4jdbc 적용
#spring.datasource.hikari.jdbc-url=jdbc:log4jdbc:mysql://localhost:3306/study_springboot?user=admin&password=admin&serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8
#spring.datasource.username=admin
#spring.datasource.password=admin
##spring.datasource.hikari.connection-test-query=SELECT 1
#
##===========
##JPA 설정.
##MySQL5InnoDBdialect : mysql에서 성능좋은 엔진. default값은 다른 것이므로 이것으로 명시설정 해줘야한다.
##===========
#spring.jpa.database=mysql
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.use-new-id-generator-mappings=false
#spring.jpa.show-sql=true
#
##===========
##DB의 스네이크 표기를 카멜표기로 변환. 자바단에서 데이터 전달할 때(DTO) 사용. DTO에선 카멜, db에선 스네이크 표기라 호환해야함.
##===========
#mybatis.configuration.map-underscore-to-camel-case=true
#
#
#
##Oracle spring.oracle.datasource.jdbc-url=jdbc:oracle:thin:@IP:PORT:스키마 spring.oracle.datasource.username=ID spring.oracle.datasource.password=PASSWORD spring.oracle.datasource.driver-class-name=oracle.jdbc.OracleDriver spring.oracle.datasource.type=com.zaxxer.hikari.HikariDataSource spring.oracle.datasource.hikari.maximum-pool-size=10 spring.oracle.datasource.hikari.connection-test-query=SELECT 1 FROM SYS.DUAL spring.oracle.datasource.hikari.minimum-idle=5 spring.oracle.datasource.hikari.connection-timeout=100000 
#
##Mysql spring.mysql.datasource.jdbc-url=jdbc:mysql://IP:PORT/스키마?characterEncoding=UTF-8&serverTimezone=UTC spring.mysql.datasource.username=ID spring.mysql.datasource.password=PASSWORD spring.mysql.datasource.driver-class-name=com.mysql.cj.jdbc.Driver spring.mysql.datasource.type=com.zaxxer.hikari.HikariDataSource spring.mysql.datasource.hikari.maximum-pool-size=10 spring.mysql.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL spring.mysql.datasource.hikari.minimum-idle=5 spring.mysql.datasource.hikari.connection-timeout=100000